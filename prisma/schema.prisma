datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  password     String
  firstName    String
  lastName     String
  profileImage String?
  isDeleted    Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  otp          String?
  role         Role      @default(USER)
  // otpExpiry    DateTime?
  // identifier   String?
  refreshToken String?

  posts        Post[]    @relation("UserPosts")
  comments     Comment[] @relation("UserComments")

  @@map("users")
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  count     Int
  users     String[] @db.ObjectId
  postId    String?  @db.ObjectId
  post      Post?    @relation("PostLikes", fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("likes")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes      Int
  dislikes  Int
  authorId  String   @db.ObjectId
  author    User     @relation("UserComments", fields: [authorId], references: [id])
  postId    String   @db.ObjectId
  post      Post     @relation("PostComments", fields: [postId], references: [id])

  @@map("comments")
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  String    @db.ObjectId
  author    User      @relation("UserPosts", fields: [authorId], references: [id])
  image     String?
  likes     Like[]    @relation("PostLikes")
  comments  Comment[] @relation("PostComments")
  topicId   String?   @db.ObjectId
  topic     Topic?    @relation("TopicPosts", fields: [topicId], references: [id])

  @@map("posts")
}

model Topic {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  image       String?
  posts       Post[]  @relation("TopicPosts")

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("topics")
}

enum Role {
  ADMIN
  USER
}
